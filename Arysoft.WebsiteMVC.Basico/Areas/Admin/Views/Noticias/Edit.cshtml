@model Arysoft.WebsiteMVC.Basico.Models.Noticia
@using Arysoft.WebsiteMVC.Basico.Models;

@{
    bool esNueva = Model.Status == NoticiaStatus.Ninguno;
    string titleSmall = "EDITAR";
    string classCard = "card";
    ViewBag.Title = "Editar";

    if (esNueva)
    {
        titleSmall = "NUEVA";
        ViewBag.Title = "Nueva";
    }

    switch (Model.Status)
    {
        case NoticiaStatus.Ninguno:
        case NoticiaStatus.Nueva:
            classCard = "card border-primary";
            break;
        case NoticiaStatus.Publicada:
            classCard = "card border-success";
            break;
        case NoticiaStatus.Oculta:
            classCard = "card border-secondary";
            break;
        case NoticiaStatus.Eliminada:
            classCard = "card border-danger";
            break;
    }

}

<div class="row">
    <div class="col-12">
        <h3 class="mt-2">Noticia <small>@titleSmall</small></h3>
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-8">
        <div class="@classCard shadow">            
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="card-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.NoticiaID)
                        @Html.HiddenFor(model => model.ContadorVisitas)
                        @Html.HiddenFor(model => model.MeGusta)
                        @Html.HiddenFor(model => model.FechaCreacion)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Titulo)
                            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Resumen)
                            @Html.EditorFor(model => model.Resumen, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Resumen, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HTMLContent)
                            @Html.EditorFor(model => model.HTMLContent, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HTMLContent, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Autor)
                            @Html.EditorFor(model => model.Autor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TieneGaleria, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.TieneGaleria, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TieneGaleria, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Idioma, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Idioma, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Idioma, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaPublicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FechaPublicacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FechaPublicacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ImagenArchivo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ImagenArchivo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ImagenArchivo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                
                </div>
                <div class="card-footer">
                    <div class="form-group">
                        <div class="col-12 text-right">
                            @Html.Raw(
                                @Html.ActionLink("[cancelar]", "Index", null, new { @class = "btn btn-secondary" }).ToHtmlString()
                                    .Replace("[cancelar]", "<i class='bi-arrow-left-square'></i> Cancelar")
                            )
                            <button type="submit" class="btn btn-primary">
                                <i class="bi-save"></i> Guardar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-4">

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
